// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.opaque_types.OuterOpaqueType in opaque_types.proto
package squareup.protos.opaque_types;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.ReverseProtoWriter;
import com.squareup.wire.Syntax;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class OuterOpaqueType extends Message<OuterOpaqueType, OuterOpaqueType.Builder> {
  public static final ProtoAdapter<OuterOpaqueType> ADAPTER = new ProtoAdapter_OuterOpaqueType();

  private static final long serialVersionUID = 0L;

  public static final ByteString DEFAULT_INNER_OPAQUE_TYPE_1 = ByteString.EMPTY;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#BYTES"
  )
  public final ByteString inner_opaque_type_1;

  @WireField(
      tag = 2,
      adapter = "squareup.protos.opaque_types.OuterOpaqueType$InnerOpaqueType2#ADAPTER"
  )
  public final InnerOpaqueType2 inner_opaque_type_2;

  public OuterOpaqueType(ByteString inner_opaque_type_1, InnerOpaqueType2 inner_opaque_type_2) {
    this(inner_opaque_type_1, inner_opaque_type_2, ByteString.EMPTY);
  }

  public OuterOpaqueType(ByteString inner_opaque_type_1, InnerOpaqueType2 inner_opaque_type_2,
      ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.inner_opaque_type_1 = inner_opaque_type_1;
    this.inner_opaque_type_2 = inner_opaque_type_2;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.inner_opaque_type_1 = inner_opaque_type_1;
    builder.inner_opaque_type_2 = inner_opaque_type_2;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OuterOpaqueType)) return false;
    OuterOpaqueType o = (OuterOpaqueType) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(inner_opaque_type_1, o.inner_opaque_type_1)
        && Internal.equals(inner_opaque_type_2, o.inner_opaque_type_2);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (inner_opaque_type_1 != null ? inner_opaque_type_1.hashCode() : 0);
      result = result * 37 + (inner_opaque_type_2 != null ? inner_opaque_type_2.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (inner_opaque_type_1 != null) builder.append(", inner_opaque_type_1=").append(inner_opaque_type_1);
    if (inner_opaque_type_2 != null) builder.append(", inner_opaque_type_2=").append(inner_opaque_type_2);
    return builder.replace(0, 2, "OuterOpaqueType{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<OuterOpaqueType, Builder> {
    public ByteString inner_opaque_type_1;

    public InnerOpaqueType2 inner_opaque_type_2;

    public Builder() {
    }

    public Builder inner_opaque_type_1(ByteString inner_opaque_type_1) {
      this.inner_opaque_type_1 = inner_opaque_type_1;
      return this;
    }

    public Builder inner_opaque_type_2(InnerOpaqueType2 inner_opaque_type_2) {
      this.inner_opaque_type_2 = inner_opaque_type_2;
      return this;
    }

    @Override
    public OuterOpaqueType build() {
      return new OuterOpaqueType(inner_opaque_type_1, inner_opaque_type_2, super.buildUnknownFields());
    }
  }

  public static final class InnerOpaqueType1 extends Message<InnerOpaqueType1, InnerOpaqueType1.Builder> {
    public static final ProtoAdapter<InnerOpaqueType1> ADAPTER = new ProtoAdapter_InnerOpaqueType1();

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_VALUE = "";

    @WireField(
        tag = 1,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String value;

    public InnerOpaqueType1(String value) {
      this(value, ByteString.EMPTY);
    }

    public InnerOpaqueType1(String value, ByteString unknownFields) {
      super(ADAPTER, unknownFields);
      this.value = value;
    }

    @Override
    public Builder newBuilder() {
      Builder builder = new Builder();
      builder.value = value;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof InnerOpaqueType1)) return false;
      InnerOpaqueType1 o = (InnerOpaqueType1) other;
      return unknownFields().equals(o.unknownFields())
          && Internal.equals(value, o.value);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (value != null ? value.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (value != null) builder.append(", value=").append(Internal.sanitize(value));
      return builder.replace(0, 2, "InnerOpaqueType1{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<InnerOpaqueType1, Builder> {
      public String value;

      public Builder() {
      }

      public Builder value(String value) {
        this.value = value;
        return this;
      }

      @Override
      public InnerOpaqueType1 build() {
        return new InnerOpaqueType1(value, super.buildUnknownFields());
      }
    }

    private static final class ProtoAdapter_InnerOpaqueType1 extends ProtoAdapter<InnerOpaqueType1> {
      public ProtoAdapter_InnerOpaqueType1() {
        super(FieldEncoding.LENGTH_DELIMITED, InnerOpaqueType1.class, "type.googleapis.com/squareup.protos.opaque_types.OuterOpaqueType.InnerOpaqueType1", Syntax.PROTO_2, null, "opaque_types.proto");
      }

      @Override
      public int encodedSize(InnerOpaqueType1 value) {
        int result = 0;
        result += ProtoAdapter.STRING.encodedSizeWithTag(1, value.value);
        result += value.unknownFields().size();
        return result;
      }

      @Override
      public void encode(ProtoWriter writer, InnerOpaqueType1 value) throws IOException {
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.value);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public void encode(ReverseProtoWriter writer, InnerOpaqueType1 value) throws IOException {
        writer.writeBytes(value.unknownFields());
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.value);
      }

      @Override
      public InnerOpaqueType1 decode(ProtoReader reader) throws IOException {
        Builder builder = new Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.value(ProtoAdapter.STRING.decode(reader)); break;
            default: {
              reader.readUnknownField(tag);
            }
          }
        }
        builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
        return builder.build();
      }

      @Override
      public InnerOpaqueType1 redact(InnerOpaqueType1 value) {
        Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    }
  }

  public static final class InnerOpaqueType2 extends Message<InnerOpaqueType2, InnerOpaqueType2.Builder> {
    public static final ProtoAdapter<InnerOpaqueType2> ADAPTER = new ProtoAdapter_InnerOpaqueType2();

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_VALUE = "";

    @WireField(
        tag = 1,
        adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String value;

    public InnerOpaqueType2(String value) {
      this(value, ByteString.EMPTY);
    }

    public InnerOpaqueType2(String value, ByteString unknownFields) {
      super(ADAPTER, unknownFields);
      this.value = value;
    }

    @Override
    public Builder newBuilder() {
      Builder builder = new Builder();
      builder.value = value;
      builder.addUnknownFields(unknownFields());
      return builder;
    }

    @Override
    public boolean equals(Object other) {
      if (other == this) return true;
      if (!(other instanceof InnerOpaqueType2)) return false;
      InnerOpaqueType2 o = (InnerOpaqueType2) other;
      return unknownFields().equals(o.unknownFields())
          && Internal.equals(value, o.value);
    }

    @Override
    public int hashCode() {
      int result = super.hashCode;
      if (result == 0) {
        result = unknownFields().hashCode();
        result = result * 37 + (value != null ? value.hashCode() : 0);
        super.hashCode = result;
      }
      return result;
    }

    @Override
    public String toString() {
      StringBuilder builder = new StringBuilder();
      if (value != null) builder.append(", value=").append(Internal.sanitize(value));
      return builder.replace(0, 2, "InnerOpaqueType2{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<InnerOpaqueType2, Builder> {
      public String value;

      public Builder() {
      }

      public Builder value(String value) {
        this.value = value;
        return this;
      }

      @Override
      public InnerOpaqueType2 build() {
        return new InnerOpaqueType2(value, super.buildUnknownFields());
      }
    }

    private static final class ProtoAdapter_InnerOpaqueType2 extends ProtoAdapter<InnerOpaqueType2> {
      public ProtoAdapter_InnerOpaqueType2() {
        super(FieldEncoding.LENGTH_DELIMITED, InnerOpaqueType2.class, "type.googleapis.com/squareup.protos.opaque_types.OuterOpaqueType.InnerOpaqueType2", Syntax.PROTO_2, null, "opaque_types.proto");
      }

      @Override
      public int encodedSize(InnerOpaqueType2 value) {
        int result = 0;
        result += ProtoAdapter.STRING.encodedSizeWithTag(1, value.value);
        result += value.unknownFields().size();
        return result;
      }

      @Override
      public void encode(ProtoWriter writer, InnerOpaqueType2 value) throws IOException {
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.value);
        writer.writeBytes(value.unknownFields());
      }

      @Override
      public void encode(ReverseProtoWriter writer, InnerOpaqueType2 value) throws IOException {
        writer.writeBytes(value.unknownFields());
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.value);
      }

      @Override
      public InnerOpaqueType2 decode(ProtoReader reader) throws IOException {
        Builder builder = new Builder();
        long token = reader.beginMessage();
        for (int tag; (tag = reader.nextTag()) != -1;) {
          switch (tag) {
            case 1: builder.value(ProtoAdapter.STRING.decode(reader)); break;
            default: {
              reader.readUnknownField(tag);
            }
          }
        }
        builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
        return builder.build();
      }

      @Override
      public InnerOpaqueType2 redact(InnerOpaqueType2 value) {
        Builder builder = value.newBuilder();
        builder.clearUnknownFields();
        return builder.build();
      }
    }
  }

  private static final class ProtoAdapter_OuterOpaqueType extends ProtoAdapter<OuterOpaqueType> {
    public ProtoAdapter_OuterOpaqueType() {
      super(FieldEncoding.LENGTH_DELIMITED, OuterOpaqueType.class, "type.googleapis.com/squareup.protos.opaque_types.OuterOpaqueType", Syntax.PROTO_2, null, "opaque_types.proto");
    }

    @Override
    public int encodedSize(OuterOpaqueType value) {
      int result = 0;
      result += ProtoAdapter.BYTES.encodedSizeWithTag(1, value.inner_opaque_type_1);
      result += InnerOpaqueType2.ADAPTER.encodedSizeWithTag(2, value.inner_opaque_type_2);
      result += value.unknownFields().size();
      return result;
    }

    @Override
    public void encode(ProtoWriter writer, OuterOpaqueType value) throws IOException {
      ProtoAdapter.BYTES.encodeWithTag(writer, 1, value.inner_opaque_type_1);
      InnerOpaqueType2.ADAPTER.encodeWithTag(writer, 2, value.inner_opaque_type_2);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public void encode(ReverseProtoWriter writer, OuterOpaqueType value) throws IOException {
      writer.writeBytes(value.unknownFields());
      InnerOpaqueType2.ADAPTER.encodeWithTag(writer, 2, value.inner_opaque_type_2);
      ProtoAdapter.BYTES.encodeWithTag(writer, 1, value.inner_opaque_type_1);
    }

    @Override
    public OuterOpaqueType decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.inner_opaque_type_1(ProtoAdapter.BYTES.decode(reader)); break;
          case 2: builder.inner_opaque_type_2(InnerOpaqueType2.ADAPTER.decode(reader)); break;
          default: {
            reader.readUnknownField(tag);
          }
        }
      }
      builder.addUnknownFields(reader.endMessageAndGetUnknownFields(token));
      return builder.build();
    }

    @Override
    public OuterOpaqueType redact(OuterOpaqueType value) {
      Builder builder = value.newBuilder();
      if (builder.inner_opaque_type_2 != null) builder.inner_opaque_type_2 = InnerOpaqueType2.ADAPTER.redact(builder.inner_opaque_type_2);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
