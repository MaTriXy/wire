// Code generated by Wire protocol buffer compiler, do not edit.
// Source: squareup.protos.custom_options.FooBar2 in custom_options2.proto
@file:Suppress("DEPRECATION")

package com.squareup.wire.protos.custom_options

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_2
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Suppress
import okio.ByteString

/**
 * This message is to be generated in Kotlin but the options' annotations are to be generated in
 * Java. We're testing that we can consume assign Java array-typed annotations from Kotlin classes.
 * For the generation to work, we need the defined options in this file to match what is in
 * `wire-tests/src/commonTest/proto/java/custom_options.proto`.
 */
public class FooBar2(
  @MyFieldOptionOneOption(17)
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    schemaIndex = 0,
  )
  public val foo: Int? = null,
  @MyFieldOptionTwoOption(33.5f)
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    schemaIndex = 1,
  )
  public val bar: String? = null,
  @MyFieldOptionOneOption(18)
  @MyFieldOptionTwoOption(34.5f)
  @MyFieldOptionFiveOption(value = [
    3
  ])
  @MyFieldOptionSixOption(value = [
    "a",
    "b"
  ])
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    schemaIndex = 2,
  )
  public val qux: Long? = null,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<FooBar2, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is FooBar2) return false
    if (unknownFields != other.unknownFields) return false
    if (foo != other.foo) return false
    if (bar != other.bar) return false
    if (qux != other.qux) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + (foo?.hashCode() ?: 0)
      result = result * 37 + (bar?.hashCode() ?: 0)
      result = result * 37 + (qux?.hashCode() ?: 0)
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (foo != null) result += """foo=$foo"""
    if (bar != null) result += """bar=${sanitize(bar)}"""
    if (qux != null) result += """qux=$qux"""
    return result.joinToString(prefix = "FooBar2{", separator = ", ", postfix = "}")
  }

  public fun copy(
    foo: Int? = this.foo,
    bar: String? = this.bar,
    qux: Long? = this.qux,
    unknownFields: ByteString = this.unknownFields,
  ): FooBar2 = FooBar2(foo, bar, qux, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<FooBar2> = object : ProtoAdapter<FooBar2>(
      FieldEncoding.LENGTH_DELIMITED, 
      FooBar2::class, 
      "type.googleapis.com/squareup.protos.custom_options.FooBar2", 
      PROTO_2, 
      null, 
      "custom_options2.proto"
    ) {
      override fun encodedSize(`value`: FooBar2): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.INT32.encodedSizeWithTag(1, value.foo)
        size += ProtoAdapter.STRING.encodedSizeWithTag(2, value.bar)
        size += ProtoAdapter.UINT64.encodedSizeWithTag(4, value.qux)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: FooBar2) {
        ProtoAdapter.INT32.encodeWithTag(writer, 1, value.foo)
        ProtoAdapter.STRING.encodeWithTag(writer, 2, value.bar)
        ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.qux)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: FooBar2) {
        writer.writeBytes(value.unknownFields)
        ProtoAdapter.UINT64.encodeWithTag(writer, 4, value.qux)
        ProtoAdapter.STRING.encodeWithTag(writer, 2, value.bar)
        ProtoAdapter.INT32.encodeWithTag(writer, 1, value.foo)
      }

      override fun decode(reader: ProtoReader): FooBar2 {
        var foo: Int? = null
        var bar: String? = null
        var qux: Long? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> foo = ProtoAdapter.INT32.decode(reader)
            2 -> bar = ProtoAdapter.STRING.decode(reader)
            4 -> qux = ProtoAdapter.UINT64.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return FooBar2(
          foo = foo,
          bar = bar,
          qux = qux,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: FooBar2): FooBar2 = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
